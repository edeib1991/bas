// SPDX-License-Identifier: MIT
pragma solidity ^0.8.27;

contract BasicMath {
    uint256 private constant MAX_UINT = type(uint256).max;

    // Функция сложения с проверкой на переполнение
    function adder(uint256 _a, uint256 _b) external pure returns (uint256 sum, bool error) {
        if (_b > MAX_UINT - _a) {
            return (0, true); // Произошло переполнение
        }
        return (_a + _b, false);
    }

    // Функция вычитания с проверкой на "переполнение" (подчеркивает невозможность вычитания большего из меньшего)
    function subtractor(uint256 _a, uint256 _b) external pure returns (uint256 difference, bool error) {
        if (_b > _a) {
            return (0, true); // Произошло переполнение вниз (Underflow)
        }
        return (_a - _b, false);
    }
}
